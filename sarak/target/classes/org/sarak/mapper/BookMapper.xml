<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.sarak.mapper.BookMapper">    <!-- BookMapper interface의 메서드들에 대한 SQL 매핑 -->

	<resultMap type="org.sarak.domain.BookVO" id="bookMap">
		<id property="bid" column="bid"/>
		<result property="bname" column="bname"/>
		<result property="bprice" column="bprice"/>
		<result property="isbn" column="isbn"/>
		<result property="pubdate" column="pubdate"/>
		<result property="publisher" column="publisher"/>
		<result property="authorid" column="authorid"/>
		<result property="summary" column="summary"/>
		<result property="contents" column="contents"/>
		<association property="sales" resultMap="salseMap">
		</association>
		<collection property="attachList" resultMap="attachMap">
		</collection>
	</resultMap>
	
	<resultMap type="org.sarak.domain.BookAttachVO" id="attachMap">
		<id property="bid" column="bid"/>
		<result property="filename" column="filename"/>
		<result property="uploadpath" column="uploadpath"/>
	</resultMap>
	
	<resultMap type="org.sarak.domain.BookSalesVO" id="salseMap">
		<id property="bid" column="bid"/>
		<result property="sales" column="sales"/>
	</resultMap>
	
	<select id="readmap" resultMap="bookMap">
		SELECT 
			book.bid, bname, bprice, isbn, pubdate, publisher, authorid, summary, contents, filename, uploadpath, sales
		FROM
			tbl_book book
			LEFT OUTER JOIN tbl_book_img img on book.bid = img.bid
			LEFT OUTER JOIN tbl_book_sales sales on book.bid = sales.bid
		WHERE
			book.bid = #{bid}
	</select>
	
	<select id="readAllBookList" resultMap="bookMap">
			SELECT 
			book.bid, bname, bprice, isbn, pubdate, publisher, authorid, summary, contents, filename, uploadpath, sales
		FROM
			tbl_book book
			LEFT OUTER JOIN tbl_book_img img on book.bid = img.bid
			LEFT OUTER JOIN tbl_book_sales sales on book.bid = sales.bid
	</select>
	
	<select id="bestBookList" resultMap="bookMap">
	<![CDATA[
		SELECT * FROM (
		    SELECT 
		        book.bid, bname, bprice, isbn, pubdate, publisher, authorid, summary, contents, filename, uploadpath, sales
		    FROM
		        tbl_book book
		        LEFT OUTER JOIN tbl_book_img img on book.bid = img.bid
		        LEFT OUTER JOIN tbl_book_sales sales on book.bid = sales.bid
		    ORDER BY sales DESC
		) WHERE ROWNUM <= 20
		]]>
	</select>
	
	<select id="bestBookRead" resultMap="bookMap">
	<![CDATA[
		SELECT * FROM (
		    SELECT 
		        book.bid, bname, bprice, isbn, pubdate, publisher, authorid, summary, contents, filename, uploadpath, sales
		    FROM
		        tbl_book book
		        LEFT OUTER JOIN tbl_book_img img on book.bid = img.bid
		        LEFT OUTER JOIN tbl_book_sales sales on book.bid = sales.bid
		    ORDER BY sales DESC
		) WHERE ROWNUM <= 20 and bid = #{bid}
		]]>
	</select>
	
	<select id="newBookList" resultMap="bookMap">
	<![CDATA[
		SELECT * FROM (
		    SELECT 
		        book.bid, bname, bprice, isbn, pubdate, publisher, authorid, summary, contents, filename, uploadpath, sales
		    FROM
		        tbl_book book
		        LEFT OUTER JOIN tbl_book_img img on book.bid = img.bid
		        LEFT OUTER JOIN tbl_book_sales sales on book.bid = sales.bid
		    WHERE pubdate >= TO_CHAR(SYSDATE-30,'YYYY/MM/dd')
		)
		]]>
	</select>
	
		<select id="newBookRead" resultMap="bookMap">
	<![CDATA[
		SELECT * FROM (
		    SELECT 
		        book.bid, bname, bprice, isbn, pubdate, publisher, authorid, summary, contents, filename, uploadpath, sales
		    FROM
		        tbl_book book
		        LEFT OUTER JOIN tbl_book_img img on book.bid = img.bid
		        LEFT OUTER JOIN tbl_book_sales sales on book.bid = sales.bid
		    WHERE pubdate >= TO_CHAR(SYSDATE-30,'YYYY/MM/dd')
		) WHERE bid = #{bid}
		]]>
	</select>

	<!-- 전체 도서 목록 가져오기 -->
	<select id="allBookList" resultType="org.sarak.domain.BookVO">
		<![CDATA[
			select * from tbl_book order by bid
		]]>
	</select>
	
	<!-- 전체 도서 목록을 비동기로 가져오기 -->
	<select id="allBookListAjax" resultType="org.sarak.domain.BookVO">
		select * from tbl_book order by bid
	</select>
	
	<!-- 페이징 처리된 도서 목록 가져오기 -->
	<select id="bookListWithPaging" resultType="org.sarak.domain.BookVO">
		<![CDATA[
			select bid, bname, bprice, isbn, pubdate, publisher, authorid
			from
				(
				select /*+INDEX_ASC(tbl_book pk_book)*/
					rownum rn, bid, bname, bprice, isbn, pubdate, publisher, authorid
				from
					tbl_book
				where rownum <= #{pageNum} * #{amount}
				)
			where rn > (#{pageNum} - 1) * #{amount}
		]]>
	</select>
	
	<!-- 페이징을 위한 전체 도서의 수 가져오기 -->
	<select id="getTotalCount" resultType="int">
		select count(*) from tbl_book where bid > 0
	</select>
	
		<!-- 페이징 처리된 도서 목록 가져오기 -->
	<select id="bestBookListWithPaging" resultMap="bookMap">
	    <![CDATA[
	        SELECT *
	        FROM (
	            SELECT
	                rownum rn, book.bid, bname, bprice, isbn, pubdate, publisher, authorid, summary, contents, filename, uploadpath, sales
	            FROM (
	                SELECT
	                    book.bid, bname, bprice, isbn, pubdate, publisher, authorid, summary, contents, filename, uploadpath, sales
	                FROM
	                    tbl_book book
	                    LEFT OUTER JOIN tbl_book_img img on book.bid = img.bid
	                    LEFT OUTER JOIN tbl_book_sales sales on book.bid = sales.bid
	                ORDER BY sales DESC
	            ) book
	            WHERE rownum <= #{pageNum} * #{amount}
	        )
	        WHERE rn > (#{pageNum} - 1) * #{amount}
	    ]]>
	</select>
	
	<select id="getBestTotalCount" resultType="int">
    <![CDATA[
        SELECT COUNT(*)
        FROM (
            SELECT 
                book.bid
            FROM
                tbl_book book
                LEFT OUTER JOIN tbl_book_img img on book.bid = img.bid
                LEFT OUTER JOIN tbl_book_sales sales on book.bid = sales.bid
            ORDER BY sales DESC
        ) 
        WHERE ROWNUM <= 20
    ]]>
    
	</select>

		<!-- 페이징 처리된 도서 목록 가져오기 -->
	<select id="newBookListWithPaging" resultMap="bookMap">
	    <![CDATA[
	        SELECT *
	        FROM (
		        SELECT
	                rownum rn, book.bid, bname, bprice, isbn, pubdate, publisher, authorid, summary, contents, filename, uploadpath, sales
			    FROM (
				    SELECT
		                    book.bid, bname, bprice, isbn, pubdate, publisher, authorid, summary, contents, filename, uploadpath, sales
			        FROM
			        	tbl_book book
				        LEFT OUTER JOIN tbl_book_img img on book.bid = img.bid
				        LEFT OUTER JOIN tbl_book_sales sales on book.bid = sales.bid
			    	WHERE pubdate >= TO_CHAR(SYSDATE-30,'YYYY/MM/dd')
	            ) book
	            WHERE rownum <= #{pageNum} * #{amount}
	        )
	        WHERE rn > (#{pageNum} - 1) * #{amount}
	    ]]>
	</select>
	
			<!-- 페이징 처리된 도서 목록 가져오기 -->
	<select id="getNewTotalCount" resultType="int">
	    <![CDATA[
	    SELECT COUNT(*)
        FROM (
            SELECT 
                book.bid
            FROM
                tbl_book book
                LEFT OUTER JOIN tbl_book_img img on book.bid = img.bid
                LEFT OUTER JOIN tbl_book_sales sales on book.bid = sales.bid
            WHERE pubdate >= TO_CHAR(SYSDATE-30,'YYYY/MM/dd')
        )  
	    ]]>
	</select>
	
	<!-- 도서 추가 (관리자) -->
	<insert id="insert">
		insert into tbl_book (bid, bname, bprice, isbn, pubdate, publisher, authorid, summary, contents)
		values (seq_book.nextval, #{bname}, #{bprice}, #{isbn}, #{pubdate}, #{publisher}, #{authorid}, #{summary}, #{contents})
	</insert>
	
	<!-- 도서 추가 (자동 생성된 키 반환) -->
	<insert id="insertSelectKey">
		<selectKey keyProperty="bid" order="BEFORE" resultType="int">
			select seq_book.nextval from dual
		</selectKey>
		
		insert into tbl_book (bid, bname, bprice, isbn, pubdate, publisher, authorid, summary, contents)
		values (#{bid}, #{bname}, #{bprice}, #{isbn}, #{pubdate}, #{publisher}, #{authorid}, #{summary}, #{contents})
	</insert>
	
	<!-- 도서 조회 -->
	<select id="read" resultType="org.sarak.domain.BookVO">
		select * from tbl_book where bid = #{bid}
	</select>
	
	<!-- 도서 삭제 (관리자) -->
	<delete id="delete">
		delete from tbl_book where bid = #{bid}
	</delete>
	
	<!-- 도서 정보 수정 (관리자) -->
	<update id="update">
		update tbl_book set bname = #{bname},
							bprice = #{bprice},
							isbn = #{isbn},
							pubdate = #{pubdate},
							publisher = #{publisher},
							authorid = #{authorid},
							summary = #{summary},
							contents = #{contents}
						where bid = #{bid}
	</update>
	
</mapper>